"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const request_1 = __importDefault(require("@ayakashi/request"));
const packageJson = require("../../package.json");
function getManifest() {
    return __awaiter(this, void 0, void 0, function* () {
        //tslint:disable
        let manifest = {
            chromium: {
                revision: 0
            },
            ayakashi: {
                version: "0.0.0"
            }
        };
        try {
            const resp = yield request_1.default
                .get(`https://ayakashi.io/manifest.json?platform=${process.platform}&arch=${process.arch}&version=${packageJson.version}&test=${process.env.NODE_ENV === "test"}`);
            if (resp) {
                try {
                    manifest = JSON.parse(resp);
                }
                catch (_e) { }
                return manifest;
            }
            else {
                return manifest;
            }
        }
        catch (_e) {
            return manifest;
        }
        //tslint:enable
    });
}
exports.getManifest = getManifest;
