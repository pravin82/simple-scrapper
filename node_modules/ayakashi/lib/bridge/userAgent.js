"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const userAgent_1 = require("../sessionDb/userAgent");
const debug_1 = __importDefault(require("debug"));
const d = debug_1.default("ayakashi:bridge");
function addUserAgentRoutes(app, sessionDb, userAgentModel) {
    const router = express_1.Router();
    router.use(express_1.json());
    router.post("/", function (req, res) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const data = yield userAgent_1.getUserAgentData(sessionDb, userAgentModel, req.body);
                res.json({ ok: true, userAgentData: data });
            }
            catch (e) {
                d(e);
                res.json({ ok: false, msg: e.message });
            }
        });
    });
    app.use("/user_agent", router);
}
exports.addUserAgentRoutes = addUserAgentRoutes;
