import { IPipeProcMessage } from "../common/messages";
import { IPipeProcClient } from ".";
export declare function spawn(client: IPipeProcClient, options: {
    address: string;
    namespace: string;
    tcp: {
        host: string;
        port: number;
    } | false;
    memory: boolean;
    location: string;
    workers: number;
    workerConcurrency: number;
    workerRestartAfter: number;
    gc?: {
        minPruneTime?: number;
        interval?: number;
    } | boolean;
    tls: {
        server: {
            key: string;
            cert: string;
            ca: string;
        };
        client: {
            key: string;
            cert: string;
            ca: string;
        };
    } | false;
}, callback: (err?: Error | null, status?: string) => void): void;
export declare function connect(client: IPipeProcClient, options: {
    address: string;
    namespace: string;
    tcp: {
        host: string;
        port: number;
    } | false;
    isWorker: boolean;
    tls: {
        key: string;
        cert: string;
        ca: string;
    } | false;
    timeout: number;
}, callback: (err?: Error | null, status?: string) => void): void;
export declare function shutdown(client: IPipeProcClient, callback: (err?: Error | null, status?: string) => void): void;
export declare function sendMessageToNode(client: IPipeProcClient, msg: IPipeProcMessage, callback?: (err?: Error) => void): void;
